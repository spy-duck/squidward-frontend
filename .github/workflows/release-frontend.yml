name: Release frontend

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: NewTag
        id: tag
        uses: JinoArch/get-latest-tag@latest

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Generate build-info.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-8)
          BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          BRANCH="main"
          FULL_SHA="${{ github.sha }}"
          TAG="null"
          
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          TAG="${{ github.ref_name }}"
          fi
          
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/$SHORT_SHA"
          
          cat <<EOF > build.info.json
          {
          "buildTime": "$BUILD_TIME",
          "commitFull": "$FULL_SHA",
          "commit": "$SHORT_SHA",
          "tag": $( [ "$TAG" = "null" ] && echo null || echo "\"$TAG\"" ),
          "branch": "$BRANCH",
          "commitUrl": "$COMMIT_URL"
          }
          EOF

      - name: Generate changelog
        id: changelog
        run: |
          CHANGELOG=$(npx changelogen --from=${{ steps.tag.outputs.previousTag }} --to=${{ steps.tag.outputs.latestTag }} | sed '/^\[log\]/d')
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Clone backend repository
        run: |
          git clone https://github.com/spy-duck/squidward-backend.git ../squidward-backend-tmp
          mkdir ../squidward-backend
          mv ../squidward-backend-tmp/libs ../squidward-backend
          rm -rf ../squidward-backend-tmp

      - name: Install dependencies and build
        run: |
          corepack enable
          yarn set version stable
          yarn install --frozen-lockfile
          yarn build

      - name: Clean
        run: |
          rm -rf ../squidward-backend

      - name: Create ZIP archive of /dist
        run: |
          zip -r squidward-frontend.zip ./dist

      - name: Upload Release Asset
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          files: squidward-frontend.zip
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          append_body: true
          make_latest: true
          draft: false
          prerelease: false
          name: ${{ github.ref_name }}
          body: |
            # Squidward Frontend v${{ github.ref_name }}
            
            ${{ env.CHANGELOG }}
            
            ### üì¶ Artifacts
            - squidward-frontend.zip - archive with built frontend
            
            ### üîç Details
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
            - Build time: ${{ github.event.head_commit.timestamp }}